{"ast":null,"code":"var _jsxFileName = \"/Users/batuhanakdeniz/Documents/GitHub/graduation-project/solidarity-platform/src/components/YardimEkle/YardimEkle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport FormikControl from \"../FormComponents/FormikControl\";\nimport { Button } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction YardimEkle({\n  match\n}) {\n  _s();\n\n  const options = [{\n    key: 'Email',\n    value: 'emailoc'\n  }, {\n    key: 'Telephone',\n    value: 'telephonemoc'\n  }];\n  const initialValues = {\n    langitude: match.params.lng,\n    latitude: match.params.lat,\n    firstName: '',\n    lastName: '',\n    email: '',\n    registrationType: '',\n    password: '',\n    confirmPassword: '',\n    modeOfContact: '',\n    phone: ''\n  };\n  const validationSchema = Yup.object({\n    email: Yup.string().email('Invalid Email Format').required('Required'),\n    password: Yup.string().required('Required'),\n    firstName: Yup.string().required('Required'),\n    lastName: Yup.string().required('Required'),\n    confirmPassword: Yup.string().oneOf([Yup.ref('password'), ''], 'Passwords must match').required('Required'),\n    modeOfContact: Yup.string().required('Required'),\n    phone: Yup.string().when('modeOfContact', {\n      is: 'telephonemoc',\n      then: Yup.string().required('Required')\n    })\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const onSubmit = values => {\n    console.log('form date', values);\n    setIsSubmitting(true);\n    setTimeout(() => {\n      setIsSubmitting(false);\n    }, 1000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registrationFrom\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: onSubmit,\n      children: formik => {\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(FormikControl, {\n            control: \"chakrainput\",\n            type: \"text\",\n            label: \"Langitude\",\n            name: \"langitude\",\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(FormikControl, {\n            control: \"chakrainput\",\n            type: \"text\",\n            label: \"Latitude\",\n            name: \"latitude\",\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(FormikControl, {\n            control: \"chakrainput\",\n            type: \"text\",\n            label: \"First Name\",\n            name: \"firstName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(FormikControl, {\n            control: \"chakrainput\",\n            type: \"text\",\n            label: \"Lastname\",\n            name: \"lastName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(FormikControl, {\n            control: \"chakrainput\",\n            type: \"email\",\n            label: \" Email\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(FormikControl, {\n            control: \"chakrainput\",\n            type: \"password\",\n            label: \"Password\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(FormikControl, {\n            control: \"chakrainput\",\n            type: \"password\",\n            label: \"Confirm Password\",\n            name: \"confirmPassword\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(FormikControl, {\n            control: \"chakraradio\",\n            label: \"Mode of Contact\",\n            name: \"modeOfContact\",\n            options: options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(FormikControl, {\n            control: \"chakrainput\",\n            type: \"text\",\n            label: \"Phone Number\",\n            name: \"phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline\",\n            isLoading: isSubmitting,\n            loadingText: \"Submitting\",\n            colorScheme: \"teal\",\n            type: \"submit\",\n            disabled: !formik.isValid,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(YardimEkle, \"oafqrj090+oRf5bsyDQJHsshgoc=\");\n\n_c = YardimEkle;\nexport default YardimEkle;\n\nvar _c;\n\n$RefreshReg$(_c, \"YardimEkle\");","map":{"version":3,"sources":["/Users/batuhanakdeniz/Documents/GitHub/graduation-project/solidarity-platform/src/components/YardimEkle/YardimEkle.js"],"names":["React","useState","Form","Formik","Yup","FormikControl","Button","YardimEkle","match","options","key","value","initialValues","langitude","params","lng","latitude","lat","firstName","lastName","email","registrationType","password","confirmPassword","modeOfContact","phone","validationSchema","object","string","required","oneOf","ref","when","is","then","isSubmitting","setIsSubmitting","onSubmit","values","console","log","setTimeout","formik","isValid"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Form, Formik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport FormikControl from \"../FormComponents/FormikControl\"\r\nimport { Button } from '@chakra-ui/react'\r\n\r\nfunction YardimEkle({ match }) {\r\n\r\n\r\n    const options = [\r\n        { key: 'Email', value: 'emailoc' },\r\n        { key: 'Telephone', value: 'telephonemoc' }\r\n    ]\r\n    const initialValues = {\r\n        langitude: match.params.lng,\r\n        latitude: match.params.lat,\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        registrationType: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        modeOfContact: '',\r\n        phone: ''\r\n    }\r\n    const validationSchema = Yup.object({\r\n        email: Yup.string().email('Invalid Email Format').required('Required'),\r\n        password: Yup.string().required('Required'),\r\n        firstName: Yup.string().required('Required'),\r\n        lastName: Yup.string().required('Required'),\r\n        confirmPassword: Yup.string().oneOf([Yup.ref('password'), ''], 'Passwords must match').required('Required'),\r\n        modeOfContact: Yup.string().required('Required'),\r\n        phone: Yup.string().when('modeOfContact', {\r\n            is: 'telephonemoc',\r\n            then: Yup.string().required('Required')\r\n        })\r\n    })\r\n    const [isSubmitting, setIsSubmitting] = useState(false)\r\n    const onSubmit = values => {\r\n        console.log('form date', values)\r\n        setIsSubmitting(true)\r\n        setTimeout(() => {\r\n            setIsSubmitting(false)\r\n        }, 1000);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"registrationFrom\">\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={onSubmit}\r\n            >\r\n                {\r\n                    formik => {\r\n                        return (\r\n                            <Form>\r\n                                <FormikControl\r\n                                    control='chakrainput'\r\n                                    type='text'\r\n                                    label='Langitude'\r\n                                    name='langitude'\r\n                                    disabled={true}\r\n                                />\r\n                                <FormikControl\r\n                                    control='chakrainput'\r\n                                    type='text'\r\n                                    label='Latitude'\r\n                                    name='latitude'\r\n                                    disabled={true}\r\n                                />\r\n                                <FormikControl\r\n                                    control='chakrainput'\r\n                                    type='text'\r\n                                    label='First Name'\r\n                                    name='firstName'\r\n                                />\r\n                                <FormikControl\r\n                                    control='chakrainput'\r\n                                    type='text'\r\n                                    label='Lastname'\r\n                                    name='lastName'\r\n                                />\r\n                                <FormikControl\r\n                                    control='chakrainput'\r\n                                    type='email'\r\n                                    label=' Email'\r\n                                    name='email'\r\n                                />\r\n                                <FormikControl\r\n                                    control='chakrainput'\r\n                                    type='password'\r\n                                    label='Password'\r\n                                    name='password'\r\n                                />\r\n                                <FormikControl\r\n                                    control='chakrainput'\r\n                                    type='password'\r\n                                    label='Confirm Password'\r\n                                    name='confirmPassword'\r\n                                />\r\n                                <FormikControl\r\n                                    control='chakraradio'\r\n                                    label='Mode of Contact'\r\n                                    name='modeOfContact'\r\n                                    options={options}\r\n                                />\r\n                                <FormikControl\r\n                                    control='chakrainput'\r\n                                    type='text'\r\n                                    label='Phone Number'\r\n                                    name='phone'\r\n                                />\r\n                                <Button\r\n                                    variant=\"outline\"\r\n                                    isLoading={isSubmitting}\r\n                                    loadingText=\"Submitting\"\r\n                                    colorScheme=\"teal\"\r\n                                    type='submit'\r\n                                    disabled={!formik.isValid}\r\n                                >\r\n                                    Submit\r\n                                </Button>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                }\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default YardimEkle\r\n"]},"metadata":{},"sourceType":"module"}