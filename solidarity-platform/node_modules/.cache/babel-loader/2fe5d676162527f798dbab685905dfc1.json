{"ast":null,"code":"import { createParser, system } from \"../core\";\nimport { t } from \"../utils\";\nvar config = {\n  width: t.sizesT(\"width\"),\n  inlineSize: t.sizesT(\"inlineSize\"),\n  height: t.sizes(\"height\"),\n  blockSize: t.sizes(\"blockSize\"),\n  boxSize: t.sizes([\"width\", \"height\"]),\n  minWidth: t.sizes(\"minWidth\"),\n  minInlineSize: t.sizes(\"minInlineSize\"),\n  minHeight: t.sizes(\"minHeight\"),\n  minBlockSize: t.sizes(\"minBlockSize\"),\n  maxWidth: t.sizes(\"maxWidth\"),\n  maxInlineSize: t.sizes(\"maxInlineSize\"),\n  maxHeight: t.sizes(\"maxHeight\"),\n  maxBlockSize: t.sizes(\"maxBlockSize\"),\n  d: t.prop(\"display\"),\n  overflow: true,\n  overflowX: true,\n  overflowY: true,\n  display: true,\n  verticalAlign: true,\n  boxSizing: true\n};\nObject.assign(config, {\n  w: config.width,\n  h: config.height,\n  minW: config.minWidth,\n  maxW: config.maxWidth,\n  minH: config.minHeight,\n  maxH: config.maxHeight\n});\n/**\n * Types for layout related CSS properties\n */\n\nexport var layout = system(config);\nexport var layoutParser = createParser(config);","map":{"version":3,"sources":["../../../src/config/layout.ts"],"names":["config","width","t","inlineSize","height","blockSize","boxSize","minWidth","minInlineSize","minHeight","minBlockSize","maxWidth","maxInlineSize","maxHeight","maxBlockSize","d","overflow","overflowX","overflowY","display","verticalAlign","boxSizing","Object","w","h","minW","maxW","minH","maxH","layout","system","layoutParser","createParser"],"mappings":"AACA,SAAA,YAAA,EAAA,MAAA,QAAA,SAAA;AACA,SAAA,CAAA,QAAA,UAAA;AAEA,IAAMA,MAAc,GAAG;AACrBC,EAAAA,KAAK,EAAEC,CAAC,CAADA,MAAAA,CADc,OACdA,CADc;AAErBC,EAAAA,UAAU,EAAED,CAAC,CAADA,MAAAA,CAFS,YAETA,CAFS;AAGrBE,EAAAA,MAAM,EAAEF,CAAC,CAADA,KAAAA,CAHa,QAGbA,CAHa;AAIrBG,EAAAA,SAAS,EAAEH,CAAC,CAADA,KAAAA,CAJU,WAIVA,CAJU;AAKrBI,EAAAA,OAAO,EAAEJ,CAAC,CAADA,KAAAA,CAAQ,CAAA,OAAA,EALI,QAKJ,CAARA,CALY;AAMrBK,EAAAA,QAAQ,EAAEL,CAAC,CAADA,KAAAA,CANW,UAMXA,CANW;AAOrBM,EAAAA,aAAa,EAAEN,CAAC,CAADA,KAAAA,CAPM,eAONA,CAPM;AAQrBO,EAAAA,SAAS,EAAEP,CAAC,CAADA,KAAAA,CARU,WAQVA,CARU;AASrBQ,EAAAA,YAAY,EAAER,CAAC,CAADA,KAAAA,CATO,cASPA,CATO;AAUrBS,EAAAA,QAAQ,EAAET,CAAC,CAADA,KAAAA,CAVW,UAUXA,CAVW;AAWrBU,EAAAA,aAAa,EAAEV,CAAC,CAADA,KAAAA,CAXM,eAWNA,CAXM;AAYrBW,EAAAA,SAAS,EAAEX,CAAC,CAADA,KAAAA,CAZU,WAYVA,CAZU;AAarBY,EAAAA,YAAY,EAAEZ,CAAC,CAADA,KAAAA,CAbO,cAaPA,CAbO;AAcrBa,EAAAA,CAAC,EAAEb,CAAC,CAADA,IAAAA,CAdkB,SAclBA,CAdkB;AAerBc,EAAAA,QAAQ,EAfa,IAAA;AAgBrBC,EAAAA,SAAS,EAhBY,IAAA;AAiBrBC,EAAAA,SAAS,EAjBY,IAAA;AAkBrBC,EAAAA,OAAO,EAlBc,IAAA;AAmBrBC,EAAAA,aAAa,EAnBQ,IAAA;AAoBrBC,EAAAA,SAAS,EAAE;AApBU,CAAvB;AAuBAC,MAAM,CAANA,MAAAA,CAAAA,MAAAA,EAAsB;AACpBC,EAAAA,CAAC,EAAEvB,MAAM,CADW,KAAA;AAEpBwB,EAAAA,CAAC,EAAExB,MAAM,CAFW,MAAA;AAGpByB,EAAAA,IAAI,EAAEzB,MAAM,CAHQ,QAAA;AAIpB0B,EAAAA,IAAI,EAAE1B,MAAM,CAJQ,QAAA;AAKpB2B,EAAAA,IAAI,EAAE3B,MAAM,CALQ,SAAA;AAMpB4B,EAAAA,IAAI,EAAE5B,MAAM,CAACa;AANO,CAAtBS;AASA;AACA;AACA;;AA0FA,OAAO,IAAMO,MAAM,GAAGC,MAAM,CAArB,MAAqB,CAArB;AACP,OAAO,IAAMC,YAAY,GAAGC,YAAY,CAAjC,MAAiC,CAAjC","sourcesContent":["import * as CSS from \"csstype\"\nimport { Config, createParser, system } from \"../core\"\nimport { Length, t, Token } from \"../utils\"\n\nconst config: Config = {\n  width: t.sizesT(\"width\"),\n  inlineSize: t.sizesT(\"inlineSize\"),\n  height: t.sizes(\"height\"),\n  blockSize: t.sizes(\"blockSize\"),\n  boxSize: t.sizes([\"width\", \"height\"]),\n  minWidth: t.sizes(\"minWidth\"),\n  minInlineSize: t.sizes(\"minInlineSize\"),\n  minHeight: t.sizes(\"minHeight\"),\n  minBlockSize: t.sizes(\"minBlockSize\"),\n  maxWidth: t.sizes(\"maxWidth\"),\n  maxInlineSize: t.sizes(\"maxInlineSize\"),\n  maxHeight: t.sizes(\"maxHeight\"),\n  maxBlockSize: t.sizes(\"maxBlockSize\"),\n  d: t.prop(\"display\"),\n  overflow: true,\n  overflowX: true,\n  overflowY: true,\n  display: true,\n  verticalAlign: true,\n  boxSizing: true,\n}\n\nObject.assign(config, {\n  w: config.width,\n  h: config.height,\n  minW: config.minWidth,\n  maxW: config.maxWidth,\n  minH: config.minHeight,\n  maxH: config.maxHeight,\n})\n\n/**\n * Types for layout related CSS properties\n */\nexport interface LayoutProps {\n  /**\n   * The CSS `display` property\n   */\n  display?: Token<CSS.Property.Display>\n  /**\n   * The CSS `display` property\n   */\n  d?: Token<CSS.Property.Display>\n  /**\n   * The CSS `width` property\n   */\n  width?: Token<CSS.Property.Width | number, \"sizes\">\n  /**\n   * The CSS `width` property\n   */\n  w?: Token<CSS.Property.Width | number, \"sizes\">\n  inlineSize?: Token<CSS.Property.InlineSize | number, \"sizes\">\n  /**\n   * The CSS `width` and `height` property\n   */\n  boxSize?: Token<CSS.Property.Width | number, \"sizes\">\n  /**\n   * The CSS `max-width` property\n   */\n  maxWidth?: Token<CSS.Property.MaxWidth | number, \"sizes\">\n  /**\n   * The CSS `max-width` property\n   */\n  maxW?: Token<CSS.Property.MaxWidth | number, \"sizes\">\n  maxInlineSize?: Token<CSS.Property.MaxInlineSize | number, \"sizes\">\n  /**\n   * The CSS `min-width` property\n   */\n  minWidth?: Token<CSS.Property.MinWidth | number, \"sizes\">\n  /**\n   * The CSS `min-width` property\n   */\n  minW?: Token<CSS.Property.MinWidth | number, \"sizes\">\n  minInlineSize?: Token<CSS.Property.MinInlineSize | number, \"sizes\">\n  /**\n   * The CSS `height` property\n   */\n  height?: Token<CSS.Property.Height | number, \"sizes\">\n  /**\n   * The CSS `height` property\n   */\n  h?: Token<CSS.Property.Height | number, \"sizes\">\n  blockSize?: Token<CSS.Property.BlockSize | number, \"sizes\">\n  /**\n   * The CSS `max-height` property\n   */\n  maxHeight?: Token<CSS.Property.MaxHeight | number, \"sizes\">\n  /**\n   * The CSS `max-height` property\n   */\n  maxH?: Token<CSS.Property.MaxHeight | number, \"sizes\">\n  maxBlockSize?: Token<CSS.Property.MaxBlockSize | number, \"sizes\">\n  /**\n   * The CSS `min-height` property\n   */\n  minHeight?: Token<CSS.Property.MinHeight | number, \"sizes\">\n  /**\n   * The CSS `min-height` property\n   */\n  minH?: Token<CSS.Property.MinHeight | number, \"sizes\">\n  minBlockSize?: Token<CSS.Property.MinBlockSize | number, \"sizes\">\n  /**\n   * The CSS `vertical-align` property\n   */\n  verticalAlign?: Token<CSS.Property.VerticalAlign<Length>>\n  /**\n   * The CSS `overflow` property\n   */\n  overflow?: Token<CSS.Property.Overflow>\n  /**\n   * The CSS `overflow-x` property\n   */\n  overflowX?: Token<CSS.Property.OverflowX>\n  /**\n   * The CSS `overflow-y` property\n   */\n  overflowY?: Token<CSS.Property.OverflowY>\n  /**\n   * The CSS `box-sizing` property\n   */\n  boxSizing?: CSS.Property.BoxSizing\n}\n\nexport const layout = system(config)\nexport const layoutParser = createParser(config)\n"]},"metadata":{},"sourceType":"module"}